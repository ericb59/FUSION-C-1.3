# Makefile for use with Visual Studio 2005 to generate Win32 binaries
# Copyright 2012 Ming Chen. All rights reserved.

# $Id: makefile.vs8,v 1.1 2005/03/06 05:40:49 chris Exp $

# To debug, just use the IDE. Sorry.

# Programs
# Warning: the RM macro assumes that the del command accepts a "/y"
# argument (yes to all prompts) and accepts multiple filenames for
# deletion.
CC = cl
CP = copy
LD = link
RM = del /f
ZIP = zip

# Flags
CFLAGS = $(CFL1) $(CFL2)
	# /nologo	- suppress startup banner
	# /Zi		   - debug - create program database
	# /W4		   - warning level 4
	# /wd4996   - disable warning 4996
	# /WX		   - treat warnings as errors
	# /02		   - maximize speed (/Og /Oi /Ot /Oy /Gs /GF /Gy)
	#		note that
	#		/Og global optimizations (implied by /O2)
	#		/Oi - enable intrinsic functions
	#		/Ot - optimize speed
	#		/Oy -
	#		/Gs stack checking calls (for local variables)
	#		/GF enable string pooling
	#		/Gy function-level linking
	# /Ob1		- only expand __inline functions
	# /D "NDEBUG" /D "_CONSOLE" /D "WIN32" /D "_MBCS"
	# /Fo		   - output dir
	# /Fd		   - PDB dir
	# /I		   - include directory
	# /c		   - compile only
CFL1 =  /nologo /Zi /W4 /wd4996 /WX /O2 /Ob1 /D "NDEBUG" /D "_CONSOLE" /D "WIN32" /D "_MBCS"
CFL2 = /I "$(LIBDIR)" /Fo"$(BINDIR)\\" /Fd"$(BINDIR)\\" /c
LDFLAGS = $(LDFL1) $(LDFL2) $(LDFL3) $(LDFL4)
LDFL1 = /OUT:"$(BINTOH)" /INCREMENTAL:NO /NOLOGO /DEBUG /PDB:"$(PDBFILE)" 
LDFL2 = /SUBSYSTEM:CONSOLE /OPT:REF /OPT:ICF /MACHINE:X86
LDFL3 = odbc32.lib odbccp32.lib setargv.obj  kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib
LDFL4 = advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib

# Directories
BINDIR = .\bin
LIBDIR = .\lib

# Files
BINTOH = $(BINDIR)\bintoh.exe
BINFROMH = $(BINDIR)\binfromh.exe

OBJS = $(BINDIR)\getopt.obj \
	$(BINDIR)\bin2froh.obj
PDBFILE = $(BINDIR)\bin2froh.pdb

# Implicit rules
.c{$(BINDIR)}.obj:
	$(CC) @<<
  $(CFLAGS) $<
<<

# Rules
all: $(BINTOH) $(BINFROMH)

clean:
	$(RM) $(OBJS)

clobber: clean
	$(RM) $(BINTOH) $(BINFROMH) $(PDBFILE)

$(BINTOH): $(OBJS)
	$(LD) @<<
  $(LDFLAGS) $(OBJS)
<<

$(BINFROMH): $(BINTOH)
	$(CP) $(BINTOH) $(BINFROMH)

$(BINDIR)\getopt.obj: $(LIBDIR)\getopt.c $(LIBDIR)\getopt.h
	$(CC) $(CFLAGS) $(LIBDIR)\getopt.c
